import { PublicKey } from "@solana/web3.js";
/**
 * Closes Batch and the corresponding Proposal accounts for proposals in terminal states:
 * `Executed`, `Rejected`, or `Cancelled` or stale proposals that aren't Approved.
 *
 * WARNING: Make sure to call this instruction only after all `VaultBatchTransaction`s
 * are already closed via `vault_batch_transaction_account_close`,
 * because the latter requires existing `Batch` and `Proposal` accounts, which this instruction closes.
 * There is no on-chain check preventing you from closing the `Batch` and `Proposal` accounts
 * first, so you will end up with no way to close the corresponding `VaultBatchTransaction`s.
 */
export declare function batchAccountsClose({ multisigPda, member, rentCollector, batchIndex, programId, }: {
    multisigPda: PublicKey;
    member: PublicKey;
    rentCollector: PublicKey;
    batchIndex: bigint;
    programId?: PublicKey;
}): import("@solana/web3.js").TransactionInstruction;
