import * as instructions from "../instructions/index";
import { TransactionMessage, VersionedTransaction, } from "@solana/web3.js";
/**
 * Returns unsigned `VersionedTransaction` that needs to be
 * signed by `member` and `feePayer` before sending it.
 */
export function spendingLimitUse({ blockhash, feePayer, multisigPda, member, spendingLimit, mint, vaultIndex, amount, decimals, destination, tokenProgram, memo, programId, }) {
    const message = new TransactionMessage({
        payerKey: feePayer,
        recentBlockhash: blockhash,
        instructions: [
            instructions.spendingLimitUse({
                multisigPda,
                member,
                spendingLimit,
                mint,
                vaultIndex,
                amount,
                decimals,
                destination,
                tokenProgram,
                memo,
                programId,
            }),
        ],
    }).compileToV0Message();
    return new VersionedTransaction(message);
}
